---
import { getCollection } from "astro:content";
import { formatDate } from "../../utils/date";
import Card from "../ui/Card.astro";
import Tag from "../ui/Tag.astro";
import Section from "../ui/Section.astro";

export interface Props {
  title?: string;
}

const { title = "Blog" } = Astro.props;

// Get featured posts from the blog collection
const allPosts = await getCollection("blog");
const featuredPosts = allPosts
  .filter((post: any) => post.data.featured)
  .sort(
    (a: any, b: any) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

// Get the first featured post or the most recent post if no featured posts exist
const featuredPost =
  featuredPosts.length > 0
    ? featuredPosts[0]
    : allPosts.length > 0
      ? allPosts.sort(
          (a: any, b: any) =>
            b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
        )[0]
      : null;
---

<Section title={title} showSeeAll seeAllHref="/blog">
  {
    featuredPost && (
      <Card url={`/blog/${featuredPost.slug}`}>
        <h3 class="mb-2 text-xl font-bold text-gray-900 dark:text-white">
          {featuredPost.data.title}
        </h3>
        <div class="mb-2 text-sm text-gray-500 dark:text-gray-400">
          {formatDate(featuredPost.data.pubDate)}
        </div>
        <p class="mb-4 text-gray-600 dark:text-gray-300">
          {featuredPost.data.description}
        </p>
        <div class="flex flex-wrap gap-2">
          {featuredPost.data.tags.map((tag: string) => (
            <Tag text={tag} />
          ))}
        </div>
      </Card>
    )
  }
</Section>
