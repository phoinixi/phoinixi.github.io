---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Card from "../../components/ui/Card.astro";
import Tag from "../../components/ui/Tag.astro";
import PageLayout from "../../components/layout/PageLayout.astro";

// Get all projects from the collection
const allProjects = await getCollection("projects");

// Sort by featured (featured projects first), then by year (newest first)
const projects = allProjects.sort(
  (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => {
    // First sort by featured status
    if (a.data.featured && !b.data.featured) return -1;
    if (!a.data.featured && b.data.featured) return 1;

    // Then sort by year (descending)
    return b.data.year.localeCompare(a.data.year);
  }
);

// Type alias for projects
type Project = CollectionEntry<"projects">;

// Cast the projects to the correct type to avoid type errors in the template
const typedProjects: Project[] = projects;

// Helper function to render tags with proper typing
function renderTags(tags: string[]) {
  return tags.map((tag) => `<span class="post-tag">#${tag}</span>`).join("");
}
---

<Layout title="Projects | Francesco Esposito">
  <PageLayout
    title="Projects"
    description="Open-source projects and experiments I've worked on over the years."
  >
    <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
      {
        typedProjects.map((project) => (
          <Card
            url={project.data.link}
            target="_blank"
            class="flex flex-col h-full"
          >
            <div class="flex-grow">
              <div class="flex justify-between items-start mb-2">
                <h2 class="mb-2 text-xl font-bold text-gray-900 dark:text-white">
                  {project.data.title}
                </h2>
                <span class="text-sm text-gray-500 dark:text-gray-400">
                  {project.data.year}
                </span>
              </div>
              <p class="mb-4 text-gray-600 dark:text-gray-300">
                {project.data.description}
              </p>
            </div>
            <div class="flex justify-between items-center mt-4">
              <div class="flex flex-wrap gap-2">
                {project.data.tags.map((tag: string) => (
                  <Tag text={tag} />
                ))}
              </div>
            </div>
          </Card>
        ))
      }
    </div>
  </PageLayout>
</Layout>
