---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

// Get all projects from the collection
const allProjects = await getCollection("projects");

// Sort by featured (featured projects first), then by year (newest first)
const projects = allProjects.sort(
  (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => {
    // First sort by featured status
    if (a.data.featured && !b.data.featured) return -1;
    if (!a.data.featured && b.data.featured) return 1;

    // Then sort by year (descending)
    return b.data.year.localeCompare(a.data.year);
  }
);

// Type alias for projects
type Project = CollectionEntry<"projects">;

// Cast the projects to the correct type to avoid type errors in the template
const typedProjects: Project[] = projects;

// Helper function to render tags with proper typing
function renderTags(tags: string[]) {
  return tags.map((tag) => `<span class="post-tag">#${tag}</span>`).join("");
}
---

<Layout title="Projects | Francesco Esposito">
  <div class="container px-4 py-8 mx-auto">
    <header class="mx-auto mb-12 max-w-4xl">
      <div class="flex items-center mb-4">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
          Projects
        </h1>
        <span class="ml-2 text-2xl">ðŸ’»</span>
      </div>
      <p class="text-lg text-gray-600 dark:text-gray-300">
        Open-source projects and experiments I've worked on over the years.
      </p>
    </header>

    <div class="mx-auto max-w-4xl">
      <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
        {
          typedProjects.map((project) => (
            <div class="flex flex-col h-full post-card">
              <div class="flex-grow">
                <div class="flex justify-between items-start mb-2">
                  <h2 class="post-title">{project.data.title}</h2>
                  <span class="text-sm text-gray-500 dark:text-gray-400">
                    {project.data.year}
                  </span>
                </div>
                <p class="post-description">{project.data.description}</p>
              </div>
              <div class="flex justify-between items-center mt-4">
                <div class="post-tags">
                  {project.data.tags.map((tag: string) => (
                    <span class="post-tag">#{tag}</span>
                  ))}
                </div>
                <a
                  href={project.data.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline"
                >
                  View
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="ml-1 w-4 h-4"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                    />
                  </svg>
                </a>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</Layout>
