---
description: 
globs: 
alwaysApply: true
---
# General rules

- ALWAYS use the best practices of Tailwind and Astro
- BE consistent across the codebase
- DO NOT REPEAT YOURSELF and use sharable components
- DO NOT push to the repo without approval
- KEEP the scope of the prompt and only do what you're asked for
- DO NOT change things other than what you're asked for
- Before of a major change, ask for confirmation
- DO NOT add fictional personal information. NEVER fabricate details about the user's location, background, or other personal data.
- RESPECT THE ESTABLISHED ARCHITECTURE. Before making changes, analyze the codebase structure to understand patterns like content/layout separation.
- MAINTAIN SEPARATION OF CONCERNS. If the project uses MDX for content and Astro components for layout, preserve this separation.
- PRESENT OPTIONS BEFORE IMPLEMENTING MAJOR CHANGES. Provide alternatives and wait for user selection before proceeding.
- ALWAYS cleanup when you do refactoring, don't leave unusued code or unusued files hanging.
- STAY WITHIN SCOPE. Focus exclusively on the specific task requested - don't extend beyond the immediate request.
- REQUIRE CONFIRMATION FOR SIGNIFICANT CHANGES. When a change affects core functionality or multiple files, confirm before proceeding.
_ ASSUME NOTHING. If uncertain about a detail, ASK rather than guess.
- WAIT FOR APPROVAL. After presenting changes, wait for explicit approval before proceeding to the next step. 

# Development Guidelines

1. Use Astro components for layout and structure
2. Use MDX files in content collections for content
3. Use TailwindCSS for styling with utility-first approach
4. Enforce strict TypeScript settings for type safety